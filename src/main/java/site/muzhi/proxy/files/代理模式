代理模式：
    1、为对象提供一个替身，以控制对对这个对象的访问。即通过代理对象访问目标对象。
    可以在目标对象实现的基础上，增强额外的功能操作，即扩展目标对象的功能。
    2、被代理的对象可以是远程对象，创建开销大的对象或是需要安全控制的对象。
    3、创建代理的模式：静态代理，动态代理（基于JDK的代理，需要实现接口；基于CGlib的代理，基于子类的代理，不需要实现接口）

----
静态代理：需要定义接口或父类，被代理对象（目标对象）与代理对象一起实现相同的接口或是继承同样的父类。
