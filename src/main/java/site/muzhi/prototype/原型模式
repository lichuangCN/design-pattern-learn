1、原型模式是指：用原型实例指定创建对象的种类，并且通过拷贝这些原型，创建新的对象。
2、原型模式是一种创建型设计模式，允许一个对象再创建另一个可指定的对象，无需知道创建的细节。
3、原理：通过原型对象传给那个要发动创建的对象，这个要发动创建的对象通过请求原型对象
拷贝它们自己来实施创建，即 对象.clone()。

-------
原型模式看起来就像是对对象的拷贝，得到新的对象。
浅克隆：
    1、对于数据类型是基本类型的成员变量，浅克隆会直接进行值传递，也就是将值复制一份
    给新的对象。
    2、对于数据类型是引用数据类型的成员变量，浅克隆会进行引用传递，即将原来对象持有的
    引用值复制一份给新的对象，二者指向内存中同一个对象。
    3、浅拷贝采用默认的clone() 方法实现。
深克隆：
    1、复制对象的所有基本数据类型的成员变量值。
    2、为所有引用数据类型的成员变量申请存储空间。
    3、实现方式：
        3.1：通过重写clone()方法。
        3.2：通过对象序列化实现。
--------
细节：
    1、使用原型模式可以简化新对象的创建流程。
    2、不用重新初始化对象，而是动态的获得对象运行时的状态。
    3、如果原始对象发生变化(增加/减少属性)，其他克隆对象也会发生相应的变化，无需修改代码。
    4、实现深克隆时需要较为复杂的代码。
弊端：
    5、需要为每一个类提供一个克隆方法，对于已有的类进行改造时，比较复杂。