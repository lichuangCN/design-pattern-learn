1、建造者模式又称为生成器模式，它可以将复杂对象的建造过程抽象出来，使抽象过程的不同实现方法可以
构造出不同表现（属性）的对象。
2、建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以建构他们。

* 将对象的创建过程分成各个部分，每个部分具体的实现交给具体的子类实现，根据不同需求生成不同特征的对象。

3、建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品差异性较大，不适合
使用建造者模式。

建造者模式的四个组成部分：
    1、产品角色（Product）：一个具体的产品。
    2、抽象建造者（Builder）：为创建一个产品的每一部分提供一个接口。
    3、具体创建者（ConstructBuilder）：实现接口，构建和装配各个部分。
    4、指挥者（Director）：构建一个使用Builder的对象，用于指挥创建一个复杂的产品，
    起了两个作用：1.隔离用户和产品的创建过程；2.负责控制产品的创建过程。
-------------
抽象工厂 VS 建造者
1、抽象工厂实现的是对产品家族的创建，一个产品家族是一系列的产品：具有不同维度的产品组合，
抽象工厂不需要关系构建过程，只关心什么产品由什么工厂生产。
（即用户需要的只是一个产品，而不关系产品的生产细节）
2、建造者模式更主要的是按照指定的生产顺序/蓝图生产产品。
也就是说：建造者模式多了一层对产品创建流程的控制层（Director）。抽象工厂不控制产品的创建流程，只对外提供产品。