模板方法模式：
    1.在一个抽象类中公开定义了执行它的方法的模板。它的子类可以按照需要重写方法实现。
    但调用将以抽象类中定义的方式进行。抽象类中的方法可以是抽象的，也可以是实现的。
    2.模板方法模式定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，使得子类可以
    不改变一个算法的结构，就可以重新定义该算法的某些特定步骤。

钩子方法：
    在父类的中，可以定义一个方法，它默认不做任何事情，子类可以根据需要决定要不要覆盖它。

---
1、基本思想：算法只存在一个地方，也就是在父类中，容易修改。需要修改父类的模板方法或者是已经
实现的步骤，子类就会继承这些修改。
2、实现最大化的代码复用，父类中的模板方法和已实现的某些步骤会被子类继承而直接使用。
3、统一了算法，提供了很大的灵活性，父类的模板方法确保了算法的结构保持不变，由子类提供部分步骤的实现。
4、不足：每一个不同的实现都需要一个子类，导致类的个数增加。
5、一般模板方法都加上final关键字，防止子类重写模板方法。